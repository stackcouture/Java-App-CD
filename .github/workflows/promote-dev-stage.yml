name: Promote Dev to Stage

on:
  workflow_dispatch:

jobs:
  promote:
    name: Promote dev-values to stage-values.yaml
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Checkout the main repo with full history for git commands
      - name: Checkout main repo (values)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Clone the Helm chart repo early so it's ready for validation
      - name: Clone Helm chart repo
        run: git clone https://github.com/stackcouture/springboot-helm-chart.git

      # Configure Git author info for commits
      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Create a promotion branch named with short git SHA
      - name: Create promotion branch from Git SHA
        id: create-branch
        run: |
          SHA=$(git rev-parse --short HEAD)
          BRANCH_NAME="promote-dev-to-stage-$SHA"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b "$BRANCH_NAME"

      # Show diff between current stage-values.yaml and dev-values.yaml for PR body
      - name: Show diff before copying
        run: |
          echo '```diff' > diff.txt
          diff deploy/stage-values.yaml deploy/dev-values.yaml || true >> diff.txt
          echo '```' >> diff.txt

      # Copy dev-values.yaml to stage-values.yaml (promote)
      - name: Promote dev to stage
        run: |
          cp deploy/dev-values.yaml deploy/stage-values.yaml

      # Check if there are any changes to commit; exit if none to avoid empty commit
      - name: Check for changes after promote
        run: |
          if git diff --quiet deploy/stage-values.yaml; then
            echo "No changes to promote. Exiting workflow."
            exit 0
          fi

      # Validate the stage-values.yaml with Helm template to catch invalid config early
      - name: Validate Helm template (fail if invalid)
        run: |
          helm template my-app springboot-helm-chart/helm-charts/springboot \
            -f deploy/stage-values.yaml

      # Commit and push the promotion branch
      - name: Commit and push changes
        run: |
          git add deploy/stage-values.yaml
          git commit -m "Promote dev-values to stage-values"
          git push origin "$BRANCH_NAME"

      # Check if a PR already exists for this promotion branch
      - name: Check for existing PR
        id: pr-check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = process.env.BRANCH_NAME;
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branch}`
            });
            if (pulls.length > 0) {
              return pulls[0].number.toString();
            }
            return '0';

      # Read the diff file content for the PR body
      - name: Read diff into output
        id: read-diff
        run: |
          body="$(cat diff.txt)"
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Optional debug step (remove if not needed)
      - name: Debug info
        run: |
          echo "Promotion branch: $BRANCH_NAME"
          git log -1
          # Uncomment if GitHub CLI is installed
          # gh pr list --head $BRANCH_NAME || echo "No PR found"

      # Create a PR only if none exists for this branch
      - name: Create Pull Request
        if: steps.pr-check.outputs.result == '0'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Promote dev-values to stage-values"
          body: |
            This PR promotes changes from `dev-values.yaml` ‚Üí `stage-values.yaml`.

            ### üîç Visual Diff:
            ${{ steps.read-diff.outputs.body }}
          base: main
          branch: ${{ env.BRANCH_NAME }}
          labels: |
            auto-merge
            promotion
